#pragma once
#pragma region 到时间(WA码)
std::tm 到时间(const std::string& 时间文本);
std::tm 到时间(const std::wstring& 时间文本);
#pragma endregion 

#pragma region 取对应时间
int 取日(const std::tm& 时间);
int 取分钟(const std::tm& 时间);
int 取秒(const std::tm& 时间);
int 取某月天数(int 年份, int 月份);
int 取年份(const std::tm& 时间);
std::tm 取日期(std::tm 时间);
std::tm 取时间(std::tm 时间);
#pragma endregion

#pragma region 取时间部分
//时间操作 - 取时间部分
/*
	调用格式： 〈整数型〉 取时间部分 （std::tm 欲取其部分的时间，整数型 欲取的时间部分） - 系统核心支持库->时间操作
	英文名称：TimePart
	返回一个包含已知时间指定部分的整数。本命令为初级命令。
	参数<1>的名称为“欲取其部分的时间”，类型为“std::tm（std::tm）”。
	参数<2>的名称为“欲取的时间部分”，类型为“整数型（int）”。参数值可以为以下常量：
	1、#年份； 2、#季度； 3、#月份； 4、#自年首周数； 5、#日； 6、#小时； 7、#分钟； 8、#秒； 9、#星期几； 10、#自年首天数。其中：自年首周数、自年首天数均从 1 开始。
*/
int 取时间部分(const std::tm& 欲取其部分的时间, int 欲取的时间部分);
#pragma endregion
//时间操作 - 取时间间隔
/*
	调用格式： 〈双精度小数型〉 取时间间隔 （std::tm 时间1，std::tm 时间2，整数型 取间隔部分） - 系统核心支持库->时间操作
	英文名称：TimeDiff
	返回一个数值，表示“时间1”减去“时间2”之后的间隔数目。注意：每个星期以星期天为第一天。本命令为初级命令。
	参数<1>的名称为“时间1”，类型为“std::tm（std::tm）”。
	参数<2>的名称为“时间2”，类型为“std::tm（std::tm）”。
	参数<3>的名称为“取间隔部分”，类型为“整数型（int）”。参数值指定取时间间隔的单位，可以为以下常量： 1、#年份； 2、#季度； 3、#月份； 4、#周； 5、#日； 6、#小时； 7、#分钟； 8、#秒。
*/
double 取时间间隔(const std::tm& 时间1, const std::tm& 时间2, int 取间隔部分);

std::tm 取现行时间();
int 取小时(const std::tm& 时间);
int 取星期几(const std::tm& 时间);
int 取月份(const std::tm& 时间);


//时间操作 - 时间到文本
/*
	调用格式： 〈文本型〉 时间到文本 （std::tm 欲转换到文本的时间，［整数型 转换部分］） - 系统核心支持库->时间操作
	英文名称：TimeToText
	将指定时间转换为文本并返回。本命令为初级命令。
	参数<1>的名称为“欲转换到文本的时间”，类型为“std::tm（std::tm）”。
	参数<2>的名称为“转换部分”，类型为“整数型（int）”，可以被省略。参数值可以为以下常量：
	1、#全部转换； 2、#日期部分； 3、#时间部分。如果省略了本参数，默认为“#全部转换”。
*/
std::string 时间到文本A(const std::tm& 欲转换到文本的时间, int 转换部分 = 1, bool 是否为中文 = true);
//时间操作 - 时间到文本
/*
	调用格式： 〈文本型〉 时间到文本 （std::tm 欲转换到文本的时间，［整数型 转换部分］） - 系统核心支持库->时间操作
	英文名称：TimeToText
	将指定时间转换为文本并返回。本命令为初级命令。
	参数<1>的名称为“欲转换到文本的时间”，类型为“std::tm（std::tm）”。
	参数<2>的名称为“转换部分”，类型为“整数型（int）”，可以被省略。参数值可以为以下常量：
	1、#全部转换； 2、#日期部分； 3、#时间部分。如果省略了本参数，默认为“#全部转换”。
*/
std::wstring 时间到文本W(const std::tm& 欲转换到文本的时间, int 转换部分 = 1, bool 是否为中文 = true);


//时间操作 - 增减时间
/*void Getstd::tmPart(std::tm dt,INT& nYear,INT& nMonth,INT& nDay)
	调用格式： 〈std::tm〉 增减时间 （std::tm 时间，整数型 被增加部分，整数型 增加值） - 系统核心支持库->时间操作
	英文名称：TimeChg
	返回一个时间，这一时间被加上或减去了一段间隔。如果改变后的时间无效，将自动靠近最近的有效时间。本命令为初级命令。
	参数<1>的名称为“时间”，类型为“std::tm（std::tm）”。
	参数<2>的名称为“被增加部分”，类型为“整数型（int）”。参数值指定增加或减少时间的哪一部分，可以为以下常量：
	1、#年份； 2、#季度； 3、#月份； 4、#周； 5、#日； 6、#小时； 7、#分钟； 8、#秒。
	参数<3>的名称为“增加值”，类型为“整数型（int）”。相对于被增加部分的增加或减少数值。
*/
std::tm 增减时间(const std::tm& 时间, int 被增加部分, int 增加值);
std::tm 指定时间(int 年, int 月 = 1, int 日 = 1, int 小时 = 0, int 分钟 = 0, int 秒 = 0);
bool 置现行时间(const std::tm& 欲设置的时间);
