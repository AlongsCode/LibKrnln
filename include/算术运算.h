#pragma once
int 取符号(double 数);

double 取绝对值(double 数);

/*
	调用格式： 〈整数型〉 绝对取整 （双精度小数型 欲取整的小数） - 系统核心支持库->算术运算
	英文名称：fix
	返回一个小数的整数部分。本命令与“取整”命令不相同之处为：
如果给定小数为负数，则本命令返回大于或等于该小数的第一个负整数，而“取整”命令则会返回小于或等于该小数的第一个负整数。例如，本命令将 -7.8 转换成 -7，而“取整”命令将 -7.8 转换成 -8。本命令为初级命令。
	参数<1>的名称为“欲取整的小数”，类型为“双精度小数型（double）”。
	参数<1>的名称为“返回的小数部分绝对值”，小数容易精度缺失，类型为“双精度小数型指针（pdouble）”。
*/
int 绝对取整(double x);

double  角度到弧度(double 欲转换的角度值);

double  弧度到角度(double 欲转换的角度值);

int 取整(double 数);

double 求次方(double 欲求次方数值, int 次方数);

double 四舍五入(double 欲被四舍五入的值, int 被舍入位置);

double 求平方根(double 欲求其平方根的数值);

double 求余弦(double 欲进行计算的角);

double 求正弦(double 欲进行计算的角);

double 求正切(double 欲进行计算的角);

double 求自然对数(double 欲求其自然对数的数值);

double 求反正切(double 欲进行计算的角);

/*
	调用格式： 〈双精度小数型〉 求反对数 （双精度小数型 欲求其反对数的数值） - 系统核心支持库->算术运算
	英文名称：exp
	返回 e（自然对数的底）的某次方。本命令为初级命令。
	参数<1>的名称为“欲求其反对数的数值”，类型为“双精度小数型（double）”。如果参数值超过 709.782712893，将导致计算溢出。
*/
double 求反对数(double 欲求其反对数的数值);


/*
	调用格式： 〈逻辑型〉 是否运算正确 （双精度小数型 欲校验的计算结果） - 系统核心支持库->算术运算
	英文名称：IsCalcOK
	对乘、除、“求次方”、“求平方根”、“求正弦值”、“求余弦值”、“求正切值”、“求反正切值”、“求自然对数”、“求反对数”等等数学运算命令所计算出来的双精度结果数值进行校验，如果该数值正确有效，返回真。如果该数值是运算错误或运算溢出后的结果，返回假。本命令为初级命令。
	参数<1>的名称为“欲校验的计算结果”，类型为“双精度小数型（double）”。

*/
bool 是否运算正确(double 欲校验的计算结果);

///*
//	调用格式： 〈无返回值〉 置随机数种子 （［整数型 欲置入的种子数值］） - 系统核心支持库->算术运算
//	英文名称：randomize
//	为随机数生成器初始化一个种子值，不同的种子值将导致“取随机数”命令返回不同的随机数系列。本命令为初级命令。
//	参数<1>的名称为“欲置入的种子数值”，类型为“整数型（int）”，可以被省略。如果省略本参数，将默认使用当前计算机系统的时钟值。
//*/
//void 置随机数种子(unsigned int 欲置入的种子数值 = GetTickCount64());

/*
	调用格式： 〈变整数〉 取随机数 （［变整数 欲取随机数的最小值］，［变整数 欲取随机数的最大值］） - 系统核心支持库->算术运算
	英文名称：rnd
	返回一个指定范围内大于0的随机数值。在使用本命令取一系列的随机数之前，应该先使用“置随机数种子”命令为随机数生成器初始化一个种子值。本命令为初级命令。
	参数<1>的名称为“欲取随机数的最小值”，类型为“变整数（int）”，可以被省略。参数必须大于或等于零。本参数如果被省略，默认为 0 。
	参数<2>的名称为“欲取随机数的最大值”，类型为“变整数（int）”，可以被省略。参数必须大于或等于零。本参数如果被省略，默认为无限。
*/
size_t 取随机数(size_t 欲取随机数的最小值 = 0, size_t 欲取随机数的最大值 = -1);


std::wstring 阶乘(uint64_t 求阶乘数);

std::wstring 双阶乘(uint64_t 求阶乘数);

bool 是否素数(uint64_t 数值);


int 取斐波那契数列项值(int n);


bool 一阶微分(double(*一阶微分方程)(double, double), double 已知的x值, double 已知的y值, double 要求解的x值, double 允许的误差, double 初始步长, double 最小步长);

int 数值积分计算(double(*函数)(double), int 样本区间, double 积分下限, double 积分上限);