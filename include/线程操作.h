bool 等待线程(void* 线程句柄, int 等待时间 = -1);
void 退出许可区(void* 互斥体);
void 进入许可区(void* 互斥体);
bool 删除进入许可证(void* 互斥体);
void* 创建进入许可证();
void* 启动线程(void(*函数)(void*), void* 参数);

// 调用格式: bool 关闭线程句柄, 命令说明: "返回真表示已成功关闭线程句柄。在Linux下，如果线程已经结束，本命令可能返回假。"
// 参数<1>: 线程句柄 void*, 参数说明: "可通过“启动线程”的第三个参数获取线程句柄。"
bool 关闭线程句柄(void* 线程句柄);
bool 强制结束线程(void* 线程句柄);
#define 创建临界区(x) 创建进入许可证(x)
#define 删除临界区(x) 删除进入许可证(x)


#define 进入临界区(x) 进入许可区(x)
#define 退出临界区(x) 退出许可区(x)
